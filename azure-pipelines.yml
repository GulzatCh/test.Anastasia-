# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

parameters:
  - name: ReleaseName
    displayName: Insert the new release branch name
    type: string
    default: ''

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    # Fetch the current version number
              VERSION_FILE="version.txt"
              if [ -f $VERSION_FILE ]; then
                CURRENT_VERSION=$(cat $VERSION_FILE)
              else
                echo "00.0" > $VERSION_FILE
                CURRENT_VERSION="00.0"
              fi

              # Split the current version number into major and minor parts
              IFS='.' read -r MAJOR MINOR <<< "$CURRENT_VERSION"

              # Increment the minor version
              MINOR=$((MINOR + 1))

              # Create the new version number
              NEW_VERSION="$MAJOR.$MINOR"

              # Update the version file with the new version
              echo $NEW_VERSION > $VERSION_FILE

              # Commit the updated version file back to the repository
              git config user.name "Azure DevOps"
              git config user.email "devops@azure.com"
              git add $VERSION_FILE
              git commit -m "Increment version number to $NEW_VERSION"
              git push origin main

              # Create the new release branch with the updated version number
              git checkout -b release/${{ parameters.ReleaseName }}-$NEW_VERSION && git push origin release/${{ parameters.ReleaseName }}-$NEW_VERSION
            displayName: CreateReleaseBranch
